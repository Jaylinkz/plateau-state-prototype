{"ast":null,"code":"var _jsxFileName = \"/home/jay/argon-dashboard-material-ui-main/src/examples/Tables/Table/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// uuid is a library for generating unique id\nimport { v4 as uuidv4 } from \"uuid\";\n\n// @mui material components\nimport { Table as MuiTable } from \"@mui/material\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\nimport ArgonAvatar from \"components/ArgonAvatar\";\nimport ArgonTypography from \"components/ArgonTypography\";\n\n// Argon Dashboard 2 MUI base styles\nimport typography from \"assets/theme/base/typography\";\nimport borders from \"assets/theme/base/borders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  columns,\n  rows\n}) {\n  _s();\n  const {\n    size,\n    fontWeightBold\n  } = typography;\n  const {\n    borderWidth\n  } = borders;\n  const renderColumns = columns.map(({\n    name,\n    align,\n    width\n  }, key) => {\n    let pl;\n    let pr;\n    if (key === 0) {\n      pl = 3;\n      pr = 3;\n    } else if (key === columns.length - 1) {\n      pl = 3;\n      pr = 3;\n    } else {\n      pl = 1;\n      pr = 1;\n    }\n    return /*#__PURE__*/_jsxDEV(ArgonBox, {\n      component: \"th\",\n      width: width || \"auto\",\n      pt: 1.5,\n      pb: 1.25,\n      pl: align === \"left\" ? pl : 3,\n      pr: align === \"right\" ? pr : 3,\n      textAlign: align,\n      fontSize: size.xxs,\n      fontWeight: fontWeightBold,\n      color: \"secondary\",\n      opacity: 0.7,\n      sx: ({\n        palette: {\n          light\n        }\n      }) => ({\n        borderBottom: `${borderWidth[1]} solid ${light.main}`\n      }),\n      children: name.toUpperCase()\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  });\n  const renderRows = rows.map((row, key) => {\n    const rowKey = `row-${key}`;\n    const tableRow = columns.map(({\n      name,\n      align\n    }) => {\n      let template;\n      if (Array.isArray(row[name])) {\n        template = /*#__PURE__*/_jsxDEV(ArgonBox, {\n          component: \"td\",\n          p: 1,\n          sx: ({\n            palette: {\n              light\n            }\n          }) => ({\n            borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${light.main}` : null\n          }),\n          children: /*#__PURE__*/_jsxDEV(ArgonBox, {\n            display: \"flex\",\n            alignItems: \"center\",\n            py: 0.5,\n            px: 1,\n            children: [/*#__PURE__*/_jsxDEV(ArgonBox, {\n              mr: 2,\n              children: /*#__PURE__*/_jsxDEV(ArgonAvatar, {\n                src: row[name][0],\n                name: row[name][1],\n                variant: \"rounded\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ArgonTypography, {\n              variant: \"button\",\n              fontWeight: \"medium\",\n              sx: {\n                width: \"max-content\"\n              },\n              children: row[name][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this);\n      } else {\n        template = /*#__PURE__*/_jsxDEV(ArgonBox, {\n          component: \"td\",\n          p: 1,\n          textAlign: align,\n          verticalAlign: \"middle\",\n          lineHeight: 0.65,\n          sx: ({\n            palette: {\n              light\n            }\n          }) => ({\n            borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${light.main}` : null\n          }),\n          children: /*#__PURE__*/_jsxDEV(ArgonTypography, {\n            variant: \"button\",\n            fontWeight: \"regular\",\n            color: \"secondary\",\n            sx: {\n              display: \"inline-block\",\n              width: \"max-content\"\n            },\n            children: row[name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this);\n      }\n      return template;\n    });\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: tableRow\n    }, rowKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this);\n  });\n  return useMemo(() => /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(MuiTable, {\n      children: [/*#__PURE__*/_jsxDEV(ArgonBox, {\n        component: \"thead\",\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: renderColumns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: renderRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 7\n  }, this), [columns, rows]);\n}\n\n// Setting default values for the props of Table\n_s(Table, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n_c = Table;\nTable.defaultProps = {\n  columns: [],\n  rows: [{}]\n};\n\n// Typechecking props for the Table\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object),\n  rows: PropTypes.arrayOf(PropTypes.object)\n};\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useMemo","PropTypes","v4","uuidv4","Table","MuiTable","TableBody","TableContainer","TableRow","ArgonBox","ArgonAvatar","ArgonTypography","typography","borders","jsxDEV","_jsxDEV","columns","rows","_s","size","fontWeightBold","borderWidth","renderColumns","map","name","align","width","key","pl","pr","length","component","pt","pb","textAlign","fontSize","xxs","fontWeight","color","opacity","sx","palette","light","borderBottom","main","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","renderRows","row","rowKey","tableRow","template","Array","isArray","p","hasBorder","display","alignItems","py","px","mr","src","variant","verticalAlign","lineHeight","_c","defaultProps","propTypes","arrayOf","object","$RefreshReg$"],"sources":["/home/jay/argon-dashboard-material-ui-main/src/examples/Tables/Table/index.js"],"sourcesContent":["/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useMemo } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// uuid is a library for generating unique id\nimport { v4 as uuidv4 } from \"uuid\";\n\n// @mui material components\nimport { Table as MuiTable } from \"@mui/material\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\nimport ArgonAvatar from \"components/ArgonAvatar\";\nimport ArgonTypography from \"components/ArgonTypography\";\n\n// Argon Dashboard 2 MUI base styles\nimport typography from \"assets/theme/base/typography\";\nimport borders from \"assets/theme/base/borders\";\n\nfunction Table({ columns, rows }) {\n  const { size, fontWeightBold } = typography;\n  const { borderWidth } = borders;\n\n  const renderColumns = columns.map(({ name, align, width }, key) => {\n    let pl;\n    let pr;\n\n    if (key === 0) {\n      pl = 3;\n      pr = 3;\n    } else if (key === columns.length - 1) {\n      pl = 3;\n      pr = 3;\n    } else {\n      pl = 1;\n      pr = 1;\n    }\n\n    return (\n      <ArgonBox\n        key={name}\n        component=\"th\"\n        width={width || \"auto\"}\n        pt={1.5}\n        pb={1.25}\n        pl={align === \"left\" ? pl : 3}\n        pr={align === \"right\" ? pr : 3}\n        textAlign={align}\n        fontSize={size.xxs}\n        fontWeight={fontWeightBold}\n        color=\"secondary\"\n        opacity={0.7}\n        sx={({ palette: { light } }) => ({ borderBottom: `${borderWidth[1]} solid ${light.main}` })}\n      >\n        {name.toUpperCase()}\n      </ArgonBox>\n    );\n  });\n\n  const renderRows = rows.map((row, key) => {\n    const rowKey = `row-${key}`;\n\n    const tableRow = columns.map(({ name, align }) => {\n      let template;\n\n      if (Array.isArray(row[name])) {\n        template = (\n          <ArgonBox\n            key={uuidv4()}\n            component=\"td\"\n            p={1}\n            sx={({ palette: { light } }) => ({\n              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${light.main}` : null,\n            })}\n          >\n            <ArgonBox display=\"flex\" alignItems=\"center\" py={0.5} px={1}>\n              <ArgonBox mr={2}>\n                <ArgonAvatar src={row[name][0]} name={row[name][1]} variant=\"rounded\" size=\"sm\" />\n              </ArgonBox>\n              <ArgonTypography variant=\"button\" fontWeight=\"medium\" sx={{ width: \"max-content\" }}>\n                {row[name][1]}\n              </ArgonTypography>\n            </ArgonBox>\n          </ArgonBox>\n        );\n      } else {\n        template = (\n          <ArgonBox\n            key={uuidv4()}\n            component=\"td\"\n            p={1}\n            textAlign={align}\n            verticalAlign=\"middle\"\n            lineHeight={0.65}\n            sx={({ palette: { light } }) => ({\n              borderBottom: row.hasBorder ? `${borderWidth[1]} solid ${light.main}` : null,\n            })}\n          >\n            <ArgonTypography\n              variant=\"button\"\n              fontWeight=\"regular\"\n              color=\"secondary\"\n              sx={{ display: \"inline-block\", width: \"max-content\" }}\n            >\n              {row[name]}\n            </ArgonTypography>\n          </ArgonBox>\n        );\n      }\n\n      return template;\n    });\n\n    return <TableRow key={rowKey}>{tableRow}</TableRow>;\n  });\n\n  return useMemo(\n    () => (\n      <TableContainer>\n        <MuiTable>\n          <ArgonBox component=\"thead\">\n            <TableRow>{renderColumns}</TableRow>\n          </ArgonBox>\n          <TableBody>{renderRows}</TableBody>\n        </MuiTable>\n      </TableContainer>\n    ),\n    [columns, rows]\n  );\n}\n\n// Setting default values for the props of Table\nTable.defaultProps = {\n  columns: [],\n  rows: [{}],\n};\n\n// Typechecking props for the Table\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object),\n  rows: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}