{"ast":null,"code":"var _jsxFileName = \"/home/jay/argon-dashboard-material-ui-main/src/layouts/billing/components/BaseLayout/index.js\",\n  _s = $RefreshSig$();\n/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\n\n// Argon Dashboard 2 MUI base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\n\n// Argon Dashboard 2 MUI example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BaseLayout({\n  stickyNavbar,\n  children\n}) {\n  _s();\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.sm ? setTabsOrientation(\"vertical\") : setTabsOrientation(\"horizontal\");\n    }\n\n    /** \n     The event listener that's calling the handleTabsOrientation function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleTabsOrientation);\n\n    // Call the handleTabsOrientation function to set the state with the initial value.\n    handleTabsOrientation();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]);\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {\n      absolute: !stickyNavbar,\n      isMini: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArgonBox, {\n      mt: stickyNavbar ? 3 : 10,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of BaseLayout\n_s(BaseLayout, \"dqRNHF4lTFQFTiomXMDTwDH/T4Q=\");\n_c = BaseLayout;\nBaseLayout.defaultProps = {\n  stickyNavbar: false\n};\n\n// Typechecking props for BaseLayout\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool,\n  children: PropTypes.node.isRequired\n};\nexport default BaseLayout;\nvar _c;\n$RefreshReg$(_c, \"BaseLayout\");","map":{"version":3,"names":["useState","useEffect","PropTypes","Grid","AppBar","Tabs","Tab","ArgonBox","breakpoints","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","BaseLayout","stickyNavbar","children","_s","tabsOrientation","setTabsOrientation","tabValue","setTabValue","handleTabsOrientation","window","innerWidth","values","sm","addEventListener","removeEventListener","handleSetTabValue","event","newValue","absolute","isMini","fileName","_jsxFileName","lineNumber","columnNumber","mt","_c","defaultProps","propTypes","bool","node","isRequired","$RefreshReg$"],"sources":["/home/jay/argon-dashboard-material-ui-main/src/layouts/billing/components/BaseLayout/index.js"],"sourcesContent":["/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { useState, useEffect } from \"react\";\n\n// prop-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\n// Argon Dashboard 2 MUI components\nimport ArgonBox from \"components/ArgonBox\";\n\n// Argon Dashboard 2 MUI base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\n\n// Argon Dashboard 2 MUI example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\nfunction BaseLayout({ stickyNavbar, children }) {\n  const [tabsOrientation, setTabsOrientation] = useState(\"horizontal\");\n  const [tabValue, setTabValue] = useState(0);\n\n  useEffect(() => {\n    // A function that sets the orientation state of the tabs.\n    function handleTabsOrientation() {\n      return window.innerWidth < breakpoints.values.sm\n        ? setTabsOrientation(\"vertical\")\n        : setTabsOrientation(\"horizontal\");\n    }\n\n    /** \n     The event listener that's calling the handleTabsOrientation function when resizing the window.\n    */\n    window.addEventListener(\"resize\", handleTabsOrientation);\n\n    // Call the handleTabsOrientation function to set the state with the initial value.\n    handleTabsOrientation();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleTabsOrientation);\n  }, [tabsOrientation]);\n\n  const handleSetTabValue = (event, newValue) => setTabValue(newValue);\n\n  return (\n    <DashboardLayout>\n      <DashboardNavbar absolute={!stickyNavbar} isMini />\n      <ArgonBox mt={stickyNavbar ? 3 : 10}>\n        {/* <Grid container>\n          <Grid item xs={12} sm={8} lg={4}>\n            <AppBar position=\"static\">\n              <Tabs orientation={tabsOrientation} value={tabValue} onChange={handleSetTabValue}>\n                <Tab label=\"Messages\" />\n                <Tab label=\"Social\" />\n                <Tab label=\"Notifications\" />\n                <Tab label=\"Backup\" />\n              </Tabs>\n            </AppBar>\n          </Grid>\n        </Grid> */}\n        {children}\n      </ArgonBox>\n      <Footer />\n    </DashboardLayout>\n  );\n}\n\n// Setting default values for the props of BaseLayout\nBaseLayout.defaultProps = {\n  stickyNavbar: false,\n};\n\n// Typechecking props for BaseLayout\nBaseLayout.propTypes = {\n  stickyNavbar: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n};\n\nexport default BaseLayout;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;;AAEnC;AACA,OAAOC,QAAQ,MAAM,qBAAqB;;AAE1C;AACA,OAAOC,WAAW,MAAM,+BAA+B;;AAEvD;AACA,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,UAAUA,CAAC;EAAEC,YAAY;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,YAAY,CAAC;EACpE,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd;IACA,SAASqB,qBAAqBA,CAAA,EAAG;MAC/B,OAAOC,MAAM,CAACC,UAAU,GAAGhB,WAAW,CAACiB,MAAM,CAACC,EAAE,GAC5CP,kBAAkB,CAAC,UAAU,CAAC,GAC9BA,kBAAkB,CAAC,YAAY,CAAC;IACtC;;IAEA;AACJ;AACA;IACII,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAEL,qBAAqB,CAAC;;IAExD;IACAA,qBAAqB,CAAC,CAAC;;IAEvB;IACA,OAAO,MAAMC,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEN,qBAAqB,CAAC;EAC1E,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;EAErB,MAAMW,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAKV,WAAW,CAACU,QAAQ,CAAC;EAEpE,oBACElB,OAAA,CAACJ,eAAe;IAAAO,QAAA,gBACdH,OAAA,CAACH,eAAe;MAACsB,QAAQ,EAAE,CAACjB,YAAa;MAACkB,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDxB,OAAA,CAACN,QAAQ;MAAC+B,EAAE,EAAEvB,YAAY,GAAG,CAAC,GAAG,EAAG;MAAAC,QAAA,EAajCA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACXxB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEtB;;AAEA;AAAApB,EAAA,CAjDSH,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAkDnBA,UAAU,CAAC0B,YAAY,GAAG;EACxBzB,YAAY,EAAE;AAChB,CAAC;;AAED;AACAD,UAAU,CAAC2B,SAAS,GAAG;EACrB1B,YAAY,EAAEb,SAAS,CAACwC,IAAI;EAC5B1B,QAAQ,EAAEd,SAAS,CAACyC,IAAI,CAACC;AAC3B,CAAC;AAED,eAAe9B,UAAU;AAAC,IAAAyB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}