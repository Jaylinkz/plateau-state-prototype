{"ast":null,"code":"/**\n=========================================================\n* Argon Dashboard 2 MUI - v3.0.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-material-ui\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*//**\n  This file is used for controlling the global states of the components,\n  you can customize the states for the different components here.\n*/import{createContext,useContext,useReducer,useMemo}from\"react\";// prop-types is a library for typechecking of props\nimport{jsx as _jsx}from\"react/jsx-runtime\";// The Argon Dashboard 2 MUI main context\nconst Argon=/*#__PURE__*/createContext(null);// Setting custom name for the context which is visible on react dev tools\nArgon.displayName=\"ArgonContext\";// Argon Dashboard 2 MUI reducer\nfunction reducer(state,action){switch(action.type){case\"MINI_SIDENAV\":{return{...state,miniSidenav:action.value};}case\"DARK_SIDENAV\":{return{...state,darkSidenav:action.value};}case\"SIDENAV_COLOR\":{return{...state,sidenavColor:action.value};}case\"TRANSPARENT_NAVBAR\":{return{...state,transparentNavbar:action.value};}case\"FIXED_NAVBAR\":{return{...state,fixedNavbar:action.value};}case\"OPEN_CONFIGURATOR\":{return{...state,openConfigurator:action.value};}case\"DIRECTION\":{return{...state,direction:action.value};}case\"LAYOUT\":{return{...state,layout:action.value};}case\"DARK_MODE\":{return{...state,darkMode:action.value};}default:{throw new Error(`Unhandled action type: ${action.type}`);}}}// Argon Dashboard 2 MUI context provider\nfunction ArgonControllerProvider(_ref){let{children}=_ref;const initialState={miniSidenav:false,darkSidenav:false,sidenavColor:null,transparentNavbar:true,fixedNavbar:false,openConfigurator:false,direction:\"ltr\",layout:\"dashboard\",darkMode:false};const[controller,dispatch]=useReducer(reducer,initialState);const value=useMemo(()=>[controller,dispatch],[controller,dispatch]);return/*#__PURE__*/_jsx(Argon.Provider,{value:value,children:children});}// Argon Dashboard 2 MUI custom hook for using context\nfunction useArgonController(){const context=useContext(Argon);if(!context){throw new Error(\"useArgonController should be used inside the ArgonControllerProvider.\");}return context;}// Typechecking props for the ArgonControllerProvider\n// Context module functions\nconst setMiniSidenav=(dispatch,value)=>dispatch({type:\"MINI_SIDENAV\",value});const setDarkSidenav=(dispatch,value)=>dispatch({type:\"DARK_SIDENAV\",value});const setSidenavColor=(dispatch,value)=>dispatch({type:\"SIDENAV_COLOR\",value});const setTransparentNavbar=(dispatch,value)=>dispatch({type:\"TRANSPARENT_NAVBAR\",value});const setFixedNavbar=(dispatch,value)=>dispatch({type:\"FIXED_NAVBAR\",value});const setOpenConfigurator=(dispatch,value)=>dispatch({type:\"OPEN_CONFIGURATOR\",value});const setDirection=(dispatch,value)=>dispatch({type:\"DIRECTION\",value});const setLayout=(dispatch,value)=>dispatch({type:\"LAYOUT\",value});const setDarkMode=(dispatch,value)=>dispatch({type:\"DARK_MODE\",value});export{ArgonControllerProvider,useArgonController,setMiniSidenav,setDarkSidenav,setSidenavColor,setTransparentNavbar,setFixedNavbar,setOpenConfigurator,setDirection,setLayout,setDarkMode};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}