{"ast":null,"code":"var _jsxFileName = \"/home/jay/argon-dashboard-material-ui-main/src/components/LeafletMap/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport PropTypes from \"prop-types\";\n\n// Fix for default marker icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nfunction LeafletMap({\n  location,\n  name,\n  style\n}) {\n  _s();\n  // Default coordinates for Nigeria\n  const defaultPosition = [9.0820, 8.6753];\n\n  // Handle location whether it's a string or array\n  const coordinates = React.useMemo(() => {\n    if (!location) return defaultPosition;\n    if (Array.isArray(location)) return location;\n    if (typeof location === 'string') {\n      return location.split(',').map(coord => parseFloat(coord.trim()));\n    }\n    return defaultPosition;\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: coordinates,\n    zoom: 13,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      ...style\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(LeafletMap, \"XNgV+fFJhE4ex41MwQvVzksDqDs=\");\n_c = LeafletMap;\nLeafletMap.propTypes = {\n  location: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.string]),\n  name: PropTypes.string.isRequired,\n  style: PropTypes.object\n};\nLeafletMap.defaultProps = {\n  style: {}\n};\nexport default LeafletMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","PropTypes","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LeafletMap","location","name","style","_s","defaultPosition","coordinates","useMemo","Array","isArray","split","map","coord","parseFloat","trim","center","zoom","width","height","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","propTypes","oneOfType","arrayOf","number","string","isRequired","object","defaultProps","$RefreshReg$"],"sources":["/home/jay/argon-dashboard-material-ui-main/src/components/LeafletMap/index.js"],"sourcesContent":["import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport PropTypes from \"prop-types\";\n\n// Fix for default marker icon\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nfunction LeafletMap({ location, name, style }) {\n  // Default coordinates for Nigeria\n  const defaultPosition = [9.0820, 8.6753];\n  \n  // Handle location whether it's a string or array\n  const coordinates = React.useMemo(() => {\n    if (!location) return defaultPosition;\n    if (Array.isArray(location)) return location;\n    if (typeof location === 'string') {\n      return location.split(',').map(coord => parseFloat(coord.trim()));\n    }\n    return defaultPosition;\n  }, [location]);\n\n  return (\n    <MapContainer\n      center={coordinates}\n      zoom={13}\n      style={{ width: \"100%\", height: \"100%\", ...style }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <Marker position={coordinates}>\n        <Popup>{name}</Popup>\n      </Marker>\n    </MapContainer>\n  );\n}\n\nLeafletMap.propTypes = {\n  location: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.string]),\n  name: PropTypes.string.isRequired,\n  style: PropTypes.object,\n};\n\nLeafletMap.defaultProps = {\n  style: {},\n};\n\nexport default LeafletMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOH,CAAC,CAACI,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CP,CAAC,CAACI,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;AAEF,SAASG,UAAUA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC7C;EACA,MAAMC,eAAe,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;;EAExC;EACA,MAAMC,WAAW,GAAGxB,KAAK,CAACyB,OAAO,CAAC,MAAM;IACtC,IAAI,CAACN,QAAQ,EAAE,OAAOI,eAAe;IACrC,IAAIG,KAAK,CAACC,OAAO,CAACR,QAAQ,CAAC,EAAE,OAAOA,QAAQ;IAC5C,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAChC,OAAOA,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,KAAK,IAAIC,UAAU,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IACnE;IACA,OAAOT,eAAe;EACxB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACEX,OAAA,CAACP,YAAY;IACXgC,MAAM,EAAET,WAAY;IACpBU,IAAI,EAAE,EAAG;IACTb,KAAK,EAAE;MAAEc,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAE,GAAGf;IAAM,CAAE;IAAAgB,QAAA,gBAEnD7B,OAAA,CAACN,SAAS;MACRoC,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACFnC,OAAA,CAACL,MAAM;MAACyC,QAAQ,EAAEpB,WAAY;MAAAa,QAAA,eAC5B7B,OAAA,CAACJ,KAAK;QAAAiC,QAAA,EAAEjB;MAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB;AAACrB,EAAA,CA7BQJ,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA+BnBA,UAAU,CAAC4B,SAAS,GAAG;EACrB3B,QAAQ,EAAEb,SAAS,CAACyC,SAAS,CAAC,CAACzC,SAAS,CAAC0C,OAAO,CAAC1C,SAAS,CAAC2C,MAAM,CAAC,EAAE3C,SAAS,CAAC4C,MAAM,CAAC,CAAC;EACtF9B,IAAI,EAAEd,SAAS,CAAC4C,MAAM,CAACC,UAAU;EACjC9B,KAAK,EAAEf,SAAS,CAAC8C;AACnB,CAAC;AAEDlC,UAAU,CAACmC,YAAY,GAAG;EACxBhC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,eAAeH,UAAU;AAAC,IAAA2B,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}